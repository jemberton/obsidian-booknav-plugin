/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// main.ts
var main_exports = {};
__export(main_exports, {
  default: () => BookNav
});
module.exports = __toCommonJS(main_exports);
var import_obsidian = require("obsidian");
var BookNav = class extends import_obsidian.Plugin {
  async onload() {
    console.log("BookNav plugin loaded");
    this.registerMarkdownCodeBlockProcessor("booknav", async (source, el, ctx) => {
      const block = el.createDiv("booknav");
      const renderedEl = new import_obsidian.MarkdownRenderChild(block);
      console.log(renderedEl);
      await import_obsidian.MarkdownRenderer.render(this.app, source, block, ctx.sourcePath, renderedEl);
    });
    this.registerMarkdownPostProcessor((el, ctx) => {
      let links = el.findAll(".booknav a");
      for (let link of links) {
        if (link.innerHTML === "prev") {
          if (link.hasAttribute("data-href")) {
            let title = link.getAttribute("data-href") || "Previous";
            link.innerHTML = title;
          }
          link.addClass("prev");
        }
        if (link.innerHTML === "next") {
          if (link.hasAttribute("data-href")) {
            let title = link.getAttribute("data-href") || "Next";
            link.innerHTML = title;
          }
          link.addClass("next");
        }
        if (link.innerHTML === "center") {
          if (link.hasAttribute("data-href")) {
            let title = link.getAttribute("data-href") || "";
            link.innerHTML = title;
          }
          link.addClass("center");
        }
      }
    });
  }
  onunload() {
    console.log("BookNav plugin unloaded");
  }
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsibWFpbi50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW1wb3J0IHsgUGx1Z2luLCBNYXJrZG93blJlbmRlckNoaWxkLCBNYXJrZG93blJlbmRlcmVyIH0gZnJvbSAnb2JzaWRpYW4nO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCb29rTmF2IGV4dGVuZHMgUGx1Z2luIHtcblx0YXN5bmMgb25sb2FkKCkge1xuXHRcdGNvbnNvbGUubG9nKCdCb29rTmF2IHBsdWdpbiBsb2FkZWQnKTtcblxuXHRcdHRoaXMucmVnaXN0ZXJNYXJrZG93bkNvZGVCbG9ja1Byb2Nlc3NvcihcImJvb2tuYXZcIiwgYXN5bmMgKHNvdXJjZSwgZWwsIGN0eCkgPT4ge1xuXHRcdFx0Y29uc3QgYmxvY2sgPSBlbC5jcmVhdGVEaXYoXCJib29rbmF2XCIpO1xuXHRcdFx0Y29uc3QgcmVuZGVyZWRFbCA9IG5ldyBNYXJrZG93blJlbmRlckNoaWxkKGJsb2NrKTtcblx0XHRcdGNvbnNvbGUubG9nKHJlbmRlcmVkRWwpO1xuICAgICAgICBcdGF3YWl0IE1hcmtkb3duUmVuZGVyZXIucmVuZGVyKHRoaXMuYXBwLCBzb3VyY2UsIGJsb2NrLCBjdHguc291cmNlUGF0aCwgcmVuZGVyZWRFbCk7XG5cdFx0fSk7XG5cblx0XHR0aGlzLnJlZ2lzdGVyTWFya2Rvd25Qb3N0UHJvY2Vzc29yKChlbCwgY3R4KSA9PiB7XG5cdFx0XHRsZXQgbGlua3MgPSBlbC5maW5kQWxsKCcuYm9va25hdiBhJyk7XG5cblx0XHRcdGZvciAobGV0IGxpbmsgb2YgbGlua3MpIHtcblx0XHRcdFx0aWYgKGxpbmsuaW5uZXJIVE1MID09PSAncHJldicpIHtcblx0XHRcdFx0XHRpZiAobGluay5oYXNBdHRyaWJ1dGUoJ2RhdGEtaHJlZicpKSB7XG5cdFx0XHRcdFx0XHRsZXQgdGl0bGU6IHN0cmluZyA9IGxpbmsuZ2V0QXR0cmlidXRlKCdkYXRhLWhyZWYnKSB8fCAnUHJldmlvdXMnO1xuXHRcdFx0XHRcdFx0bGluay5pbm5lckhUTUwgPSB0aXRsZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bGluay5hZGRDbGFzcygncHJldicpO1xuXHRcdFx0XHR9XG5cdFx0XHRcdFxuXHRcdFx0XHRpZiAobGluay5pbm5lckhUTUwgPT09ICduZXh0Jykge1xuXHRcdFx0XHRcdGlmIChsaW5rLmhhc0F0dHJpYnV0ZSgnZGF0YS1ocmVmJykpIHtcblx0XHRcdFx0XHRcdGxldCB0aXRsZTogc3RyaW5nID0gbGluay5nZXRBdHRyaWJ1dGUoJ2RhdGEtaHJlZicpIHx8ICdOZXh0Jztcblx0XHRcdFx0XHRcdGxpbmsuaW5uZXJIVE1MID0gdGl0bGU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGxpbmsuYWRkQ2xhc3MoJ25leHQnKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChsaW5rLmlubmVySFRNTCA9PT0gJ2NlbnRlcicpIHtcblx0XHRcdFx0XHRpZiAobGluay5oYXNBdHRyaWJ1dGUoJ2RhdGEtaHJlZicpKSB7XG5cdFx0XHRcdFx0XHRsZXQgdGl0bGU6IHN0cmluZyA9IGxpbmsuZ2V0QXR0cmlidXRlKCdkYXRhLWhyZWYnKSB8fCAnJztcblx0XHRcdFx0XHRcdGxpbmsuaW5uZXJIVE1MID0gdGl0bGU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGxpbmsuYWRkQ2xhc3MoJ2NlbnRlcicpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH1cblxuXHRvbnVubG9hZCgpIHtcblx0XHRjb25zb2xlLmxvZyhcIkJvb2tOYXYgcGx1Z2luIHVubG9hZGVkXCIpO1xuXHR9XG59XG4iXSwKICAibWFwcGluZ3MiOiAiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEsc0JBQThEO0FBRTlELElBQXFCLFVBQXJCLGNBQXFDLHVCQUFPO0FBQUEsRUFDM0MsTUFBTSxTQUFTO0FBQ2QsWUFBUSxJQUFJLHVCQUF1QjtBQUVuQyxTQUFLLG1DQUFtQyxXQUFXLE9BQU8sUUFBUSxJQUFJLFFBQVE7QUFDN0UsWUFBTSxRQUFRLEdBQUcsVUFBVSxTQUFTO0FBQ3BDLFlBQU0sYUFBYSxJQUFJLG9DQUFvQixLQUFLO0FBQ2hELGNBQVEsSUFBSSxVQUFVO0FBQ2hCLFlBQU0saUNBQWlCLE9BQU8sS0FBSyxLQUFLLFFBQVEsT0FBTyxJQUFJLFlBQVksVUFBVTtBQUFBLElBQ3hGLENBQUM7QUFFRCxTQUFLLDhCQUE4QixDQUFDLElBQUksUUFBUTtBQUMvQyxVQUFJLFFBQVEsR0FBRyxRQUFRLFlBQVk7QUFFbkMsZUFBUyxRQUFRLE9BQU87QUFDdkIsWUFBSSxLQUFLLGNBQWMsUUFBUTtBQUM5QixjQUFJLEtBQUssYUFBYSxXQUFXLEdBQUc7QUFDbkMsZ0JBQUksUUFBZ0IsS0FBSyxhQUFhLFdBQVcsS0FBSztBQUN0RCxpQkFBSyxZQUFZO0FBQUEsVUFDbEI7QUFDQSxlQUFLLFNBQVMsTUFBTTtBQUFBLFFBQ3JCO0FBRUEsWUFBSSxLQUFLLGNBQWMsUUFBUTtBQUM5QixjQUFJLEtBQUssYUFBYSxXQUFXLEdBQUc7QUFDbkMsZ0JBQUksUUFBZ0IsS0FBSyxhQUFhLFdBQVcsS0FBSztBQUN0RCxpQkFBSyxZQUFZO0FBQUEsVUFDbEI7QUFDQSxlQUFLLFNBQVMsTUFBTTtBQUFBLFFBQ3JCO0FBRUEsWUFBSSxLQUFLLGNBQWMsVUFBVTtBQUNoQyxjQUFJLEtBQUssYUFBYSxXQUFXLEdBQUc7QUFDbkMsZ0JBQUksUUFBZ0IsS0FBSyxhQUFhLFdBQVcsS0FBSztBQUN0RCxpQkFBSyxZQUFZO0FBQUEsVUFDbEI7QUFDQSxlQUFLLFNBQVMsUUFBUTtBQUFBLFFBQ3ZCO0FBQUEsTUFDRDtBQUFBLElBQ0QsQ0FBQztBQUFBLEVBQ0Y7QUFBQSxFQUVBLFdBQVc7QUFDVixZQUFRLElBQUkseUJBQXlCO0FBQUEsRUFDdEM7QUFDRDsiLAogICJuYW1lcyI6IFtdCn0K
